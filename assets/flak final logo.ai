%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\700\744\754\750\755\750\761\762\760\740\762\756\760) ()
%%Title: (flak final logo.ai)
%%CreationDate: 10/29/2015 3:01 PM
%%Canvassize: 16383
%%BoundingBox: 254 169 587 456
%%HiResBoundingBox: 254.9575 169.2881 586.9326 455.813
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 421.5 296.7803 421.5 296.7803
%AI3_TileBox: -0.015137 -0.019531 841.9053 595.3003
%AI3_DocumentPreview: None
%AI5_ArtSize: 841.8896 595.2803
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -394 766 1 1628 914 26 0 0 50 117 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 112 8
%%BeginData: 6900 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0FFFA8A85252FD05F827275252A8FD70FFA827FD0EF82752A8FD
%6BFF7D27FD04F8277D7DA8A8FFA8A87D5227FD04F852A8FD67FFA827F8F8
%F8277DA8FD0BFFA852FD04F852FFFFFFA87D27A8FD5EFFA8F8F8F852A8FD
%11FF7D27F8F8277D2727F8F8A8FD5DFF7DF8F8F87DFD14FF52FD07F827FD
%5DFF7DF8F827FD11FFA8A85227FD05F8275227F87DFD5CFF7DF8F827FD0F
%FF7D7D27FD06F8527DA8FFFFF8F87DFD5BFFA8F8F827FD0FFF7DFD04F827
%277DA8FD05FF7DF8F8FD5BFFA8F8F827FD0FFF7DFD04F87DA8FD08FF52F8
%F827FD5AFF27F8F8FD0FFF7DF8F827F8F827FD09FFFD04F87DFD0BFF7D52
%275252FFFFFFA8527DFD15FFA8527DFD2AFF7DF8F87DFD08FFA8A87D7D52
%5227F8F827FF7DF8F8F8FD07FFA8F8F827F827A8FD09FF52FD05F827FFFF
%52F827FD15FF52F827FD14FF27F87DFD13FF27F852FFA87D7D527D5227F8
%27FD07F852FFFFFFA8F8F827FD06FF7DF827A8F8F87DFD08FF7DF8F8277D
%7D52FFFFFF52F827FD15FF52F827FD13FFA8F8F827FD12FFA8F8F8A8FFFD
%0BF827F8F8F827FD05FFA8F8F8F8FD05FF27F852FF52F8F8FD08FF52F827
%A8FD06FF52F827FD15FF52F852FD14FF27F87DFD12FF52F827FFFFFFF8F8
%F827527D7DA8A8FF7DF8F852FD07FFA8F8F827FFFFFFA827F87DFFFFF8F8
%7DFD07FF27F852FD07FF52F827FD15FF52F827FD28FFA8F8F87DFD04FFF8
%F8F8A8FD04FF52F8F827FD09FF7DF8F8F8FFFFA8F8F8A8FFFF27F852FD07
%FF27F852FD07FF52F827A8FD14FF52F827FD28FFA8F827A8FD05FF27F8F8
%A8FFFF7DF8F852FD0BFFA8F8F827FF52F827FFFFFF7DF8F8FD07FF27F852
%FD07FF52F827FD15FF52F827FD28FF52F827FD07FFF8F8F8A87DF8F827FD
%07FF52F8A8FFFFFF7DF8F82727F87DFFFFFFA8F8F8A8FD06FF27F8FD0427
%527DFFFF52F827FD06FF7D52FD04F8277DA8FD06FF52F827FD06FF52F852
%FD0BFF27F87DFD07FF5227F8F8F82752FFFFFF27F87DFD08FF27FD04F827
%FD07FF52F8F852FD04FFA8FD04F87DFD04FF27F87DFD06FF27FD06F852FF
%FF52F827FD05FF52FD08F827A8FD05FF52F827FD05FF27F8F852FD0BFF27
%F87DFD06FFFD09F8A8FFF8F87DFD09FFF8F8F827FD07FF52F8F827FD06FF
%7DF8F8F8FD05FF27F852FD06FF52F82752522752A8FFFF52F827FD05FFF8
%F82752A8A8A852F8F827FD05FF52F852FD04FF27F8F852FD0CFFF8F852FD
%05FFF8F8F8527DA87D52F8F8F8FFF8F8A8FD08FF7DF8F852FD07FF7DF8F8
%52FD07FF52F8F852FD05FF52F852FD06FF27F852FD07FF52F827FD05FFA8
%A8FD06FF52F8F8A8FD04FF52F827FFFFFFF8F8F87DFD0DFF27F87DFD04FF
%7DF8F87DFD05FFA8F8F852F8F87DFD07FF52F8F827FD07FF52F8F827FD07
%FF52F8F852FD06FF52F852FD06FF52F852FD07FF52F827FD0EFFF8F87DFD
%04FF52F852FFA8F8F8F87DFD0EFF27F852FD04FF52F827FD07FF52F827F8
%F8A8FD06FF7DF8F852FD07FF7DF8F827FD07FF52F8F852FD07FF52F852FD
%06FF27F852FD07FF52F827FD0EFF27F87DFD04FF52F8277DF8F8F8A8FD0F
%FF27F87DFD04FF27F852FD07FF7DFD04F87DFD05FF52F8F827FD07FF52F8
%F827FD07FF52F8F852FD08FF52F827FD06FF27F852FD07FF52F827A8FD0D
%FFF8F87DFD04FF52FD04F827A8FD10FFF8F852FFFFFFA8F8F87DFD07FF7D
%F8F827F8A8FD05FF7DF8F852FD06FFA8F8F852FD07FF52F8F8F8A8FD08FF
%52F87DFD06FF27F852FD07FF52F827FD07FF5252FD0527F8F8A8FD04FF52
%F8F8F827FD12FF27F87DFD04FFF8F87DFD07FF7DFD04F87DFD06FF52F8F8
%27FD05FF7DF827FD07FF52FD04F8A8FD08FF27F852FD06FF27F852FD07FF
%52F827FD05FF7DFD0AF87DFD04FF52FD04F87DFD11FFF8F852FFFFFFA8F8
%F87DFD07FF7DF8F852F852FD07FF7DF8F827FD0DFF52F8F827F8F8A8FD07
%FFA827F8A8FD06FF27F852FD07FF52F827FD04FFA8F8F8F8527DA8A8A87D
%27F87DFD04FF52F82727F8F87DFD10FF27F87DFD04FFF8F87DFD07FF7DF8
%F852F8F8FFFFFFA82752FFFF52F8F827FD0BFF52F8F8527DF8F8FD08FFA8
%F8F8A8FD06FF52F852FD07FF52F827FD04FF27F8F8FD07FFF8F87DFD04FF
%52F852A827F8F87DFD0FFFF8F852FFFFFFA8F8F87DFD07FF7DF8F8A8F8F8
%A8FFA827F8F8A8FFFF7DF8F852FD09FF52F8F852FF7DF827FD08FF52F827
%FD07FF27F852FD07FF52F827FD04FF27F87DFD07FF27F87DFD04FF52F827
%FFA827F8F8A8FD0EFF27F87DFD04FFF8F87DFD07FF7DF8F8FF27F87DFF27
%F8F87DFD04FF52F8F827FD07FF52F8F852FFFF52F827FD08FF27F87DFD07
%FF52F852FD07FF52F827FD04FFF8F87DFD07FFF8F87DFD04FF52F852FFFF
%A8F8F8F8A8FD0DFF27F852FD04FF27F852FD07FF52F8F8FF52F8F827F8F8
%7DFD06FF52F8F852FD05FF52F8F827FFFFFF52F852FD07FFA8F8F8A8FD07
%FF27F852FD07FF52F827FD04FF27F852FD07FF27F87DFD04FF52F827FFFF
%FFA8F8F827A8FD0CFF27F87DFD04FF52F8F8A8FD06FFF8F827FFA8FD04F8
%7DFD04FF5227FFFF52F8F827FFFFFF52FD04F87DFFFF27F852FD07FF27F8
%27FD08FF27F852FD07FF52F827A8FFFFFF52F8F852A8FFFFFFA87DF8F87D
%FD04FF52F827FD04FF7DF8F827A8FFFFFF52F827FD05FFF8F852FD04FFA8
%F8F8F87DA8FFA8A8F8F8F8A8FFFF52F8F87DFD04FF7DF8F87DFFFF7DF8F8
%52FF52F8F85227F8F8A8FF27F87DFD06FF7DF8F8A8FD08FF27F852FD07FF
%52F827FD05FF27F8F8F82727F827F8F8F8A8FD04FF52F827FD05FF7DF8F8
%52FFFFA8F8F8F87DFD04FF27F87DFD05FFA8F8F8F8272727F8F8F87DFFFF
%FFA8F87DFD04FF52F8F827FD04FF52FD05F852FFFFF8F8F87DF8F87DFD05
%FFA8F8F852FD09FF52F87DFD07FF7DF827FD06FF52FD07F8277DFD05FF7D
%F852FD06FF7DF8F8FFFFFF27F8F8A8FD04FF27F87DFD06FFA827FD05F827
%A8FD05FFA8FD04FF52F8F852FD06FF7DF8F8F852FD04FF27FD04F8A8FD05
%FF52F8F8A8FD09FFA87DFD09FFA8A8FD08FFA87D7D7DA8A8FD08FFA8A8FD
%07FFA8A8FD04FF7DFD07FF7DFD09FFA8A87DA8A8FD0BFF52F8F827FD04FF
%A852FFFF52F852FD06FFFD04F8A8FD04FF52F8F87DFD5DFF7DF8F852FD05
%FFF8F852FFFF7DFD08FF27F8F8FD04FF7DF8F852FD5DFF52F8F827FD04FF
%A8F8F8F8A8FD0CFFF827FFFFFF7DF8F827FD5DFF7DF8F827FD05FFF8F8F8
%A8FD0EFF52FFFF52F8F827FD5DFF52F8F827FD04FFA8F8F8F8A8FD10FF7D
%27F8F827FD5DFF7DF8F852FD04FFA8F8F8F87DFD0FFFA827F8F8F87DFD5E
%FF27F827FD05FF7DFD04F82752A8FD08FFA8A85227F8F8F852A8FD60FFA8
%FD08FF7DFD05F82727FD05522727FD04F827A8FD6DFF7D52FD0CF82752A8
%FD72FFA8A8FD06527DA8A8FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD
%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD
%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD
%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD6BFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (Swatch Libraries.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
*u
1 D
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 10 M []0 d0 XR
323.3223 205.4697 m
332.7578 196.0342 l
335.0391 217.1875 l
323.3223 205.4697 l
323.3223 205.4697 l
f
0 D
323.1748 241.3809 m
327.0508 237.5049 l
307.2305 217.6855 l
306.165 216.6191 304.4209 216.6191 303.3545 217.6855 c
302.2881 218.751 302.2881 220.4961 303.3545 221.5605 c
323.1748 241.3809 l
323.1748 241.3809 l
f
286.2256 204.4326 m
290.1025 200.5566 l
265.3057 175.7598 l
264.2393 174.6934 262.4951 174.6934 261.4287 175.7598 c
260.3633 176.8252 260.3633 178.5703 261.4287 179.6357 c
286.2256 204.4326 l
286.2256 204.4326 l
f
265.2246 205.2422 m
275.3203 215.3379 l
279.1963 211.4619 l
274.1055 206.3701 269.0137 201.2793 263.9229 196.1875 c
257.9463 205.6064 254.957 216.375 254.958 227.1445 c
254.958 241.9512 260.6064 256.7578 271.9033 268.0547 c
283.2002 279.3516 298.0078 285 312.8135 285 c
325.3887 285 337.9648 280.9248 348.3906 272.7754 c
362.2598 276.5898 l
358.4453 262.7178 l
366.5938 252.293 370.6699 239.7188 370.6699 227.1445 c
370.6699 212.3379 365.0215 197.5313 353.7246 186.2334 c
342.4277 174.9365 327.6201 169.2881 312.8135 169.2881 c
302.0449 169.2881 291.2764 172.2773 281.8574 178.2529 c
286.9482 183.3438 292.04 188.4355 297.1318 193.5273 c
301.0078 189.6504 l
290.9111 179.5547 l
297.8438 176.3652 305.3281 174.7695 312.8135 174.7695 c
326.2168 174.7695 339.6211 179.8828 349.8477 190.1094 c
360.0752 200.3359 365.1885 213.7402 365.1885 227.1445 c
365.1885 237.1846 362.3174 247.2246 356.5791 255.9297 c
350.0547 232.2021 l
341.2041 223.3516 l
336.9678 184.0723 l
319.4463 201.5938 l
308.1787 190.3262 l
297.4512 201.0547 286.7236 211.7813 275.9961 222.5098 c
287.2637 233.7764 l
269.7422 251.2979 l
309.0215 255.5352 l
317.8721 264.3848 l
341.6016 270.9092 l
332.8955 276.6484 322.8545 279.5186 312.8135 279.5186 c
299.4102 279.5186 286.0068 274.4053 275.7793 264.1777 c
265.5527 253.9512 260.4395 240.5479 260.4395 227.1445 c
260.4395 219.6582 262.0342 212.1738 265.2246 205.2422 c
265.2246 205.2422 l
f
1 D
354.4404 268.7715 m
320.7451 259.5059 l
308.4131 247.1738 296.0811 234.8418 283.749 222.5098 c
308.1787 198.0791 l
320.5107 210.4121 332.8438 222.7441 345.1758 235.0762 c
354.4404 268.7715 l
354.4404 268.7715 l
f
281.7041 247.0879 m
291.1396 237.6523 l
302.8564 249.3691 l
281.7041 247.0879 l
281.7041 247.0879 l
f
*U
0 D
1 XR
321.1211 263.6299 m
349.4609 235.2891 l
345.585 231.4121 l
317.2441 259.7539 l
321.1211 263.6299 l
321.1211 263.6299 l
f
*u
1 D
0 XR
399.5508 258.1875 m
392.6611 258.1875 387.9248 253.8828 387.9248 246.6484 c
387.9248 199.0283 l
387.9248 197.3066 389.2168 196.1006 390.8535 196.1006 c
392.4893 196.1006 393.7803 197.2197 393.7803 199.0283 c
393.7803 234.4199 l
403.8555 234.4199 l
405.6641 234.4199 406.7842 235.626 406.7842 237.1758 c
406.7842 238.8125 405.6641 240.0176 403.8555 240.0176 c
393.7803 240.0176 l
393.7803 247.252 l
393.7803 250.4375 396.1064 253.0215 399.8086 253.0215 c
402.1338 253.0215 402.9951 252.5898 404.1143 252.5898 c
405.5781 252.5898 406.7842 253.624 406.7842 255.0879 c
406.7842 256.5518 405.751 257.4121 404.373 257.7578 c
402.4785 258.1016 401.2725 258.1875 399.5508 258.1875 c
399.5508 258.1875 l
f
417.376 258.1875 m
415.7393 258.1875 414.4482 256.9824 414.4482 255.2598 c
414.4482 199.0283 l
414.4482 197.3066 415.7393 196.1006 417.376 196.1006 c
419.0977 196.1006 420.3037 197.3066 420.3037 199.0283 c
420.3037 255.2598 l
420.3037 256.9824 419.0977 258.1875 417.376 258.1875 c
417.376 258.1875 l
f
448.0322 240.8789 m
442.9512 240.8789 438.4736 239.3291 435.46 237.6074 c
434.5986 237.0898 434.0811 236.2285 434.0811 235.1953 c
434.0811 233.6455 435.46 232.5264 436.751 232.5264 c
437.7842 232.5264 438.6455 232.957 439.6787 233.4736 c
442.4346 234.8516 445.1904 235.4541 448.29 235.4541 c
454.0596 235.4541 457.4189 232.4395 457.4189 228.0488 c
457.4189 222.3652 l
448.29 222.3652 l
439.249 222.3652 431.4121 218.748 431.4121 209.2754 c
431.4121 199.8027 438.2158 196.1006 448.376 196.1006 c
452.7686 196.1006 457.333 196.875 460.7764 198.0811 c
462.499 198.6836 463.2744 200.0615 463.2744 201.6113 c
463.2744 228.0488 l
463.2744 236.6602 456.4717 240.8789 448.0322 240.8789 c
448.0322 240.8789 l
f
0 D
457.4189 216.9395 m
457.4189 202.9033 l
454.4043 202.042 451.3896 201.5254 448.376 201.5254 c
441.832 201.5254 437.2686 203.0762 437.2686 209.1895 c
437.2686 214.873 441.832 216.9395 448.1182 216.9395 c
457.4189 216.9395 l
457.4189 216.9395 l
f
1 D
479.5498 258.1875 m
477.8271 258.1875 476.6221 256.9824 476.6221 255.2598 c
476.6221 199.0283 l
476.6221 197.3066 477.9131 196.1006 479.5498 196.1006 c
481.1846 196.1006 482.4775 197.3066 482.4775 199.0283 c
482.4775 217.8008 l
501.4219 197.1338 l
502.1104 196.3594 502.7139 196.1006 503.6611 196.1006 c
505.4697 196.1006 506.5029 197.4785 506.5029 198.9424 c
506.5029 199.7168 506.2441 200.3203 505.6416 200.9229 c
486.8682 221.0732 l
504.6084 235.7988 l
505.4697 236.4873 505.7275 237.2617 505.7275 238.0371 c
505.7275 239.7598 504.5225 240.8789 502.9717 240.8789 c
502.1963 240.8789 501.5078 240.6211 500.7334 240.0176 c
482.4775 224.5176 l
482.4775 255.2598 l
482.4775 256.9824 481.2715 258.1875 479.5498 258.1875 c
479.5498 258.1875 l
f
518.4717 204.5391 m
516.2334 204.5391 514.2529 202.6445 514.2529 200.3203 c
514.2529 197.9941 516.2334 196.1006 518.4717 196.1006 c
520.7979 196.1006 522.6914 198.0811 522.6914 200.3203 c
522.6914 202.6445 520.7979 204.5391 518.4717 204.5391 c
518.4717 204.5391 l
f
538.4502 240.8789 m
536.7275 240.8789 535.5225 239.6738 535.5225 237.9512 c
535.5225 199.0283 l
535.5225 197.3066 536.7275 196.1006 538.4502 196.1006 c
540.0869 196.1006 541.3779 197.3066 541.3779 199.0283 c
541.3779 237.9512 l
541.3779 239.6738 540.0869 240.8789 538.4502 240.8789 c
538.4502 240.8789 l
f
538.4502 256.293 m
536.3838 256.293 534.6611 254.6572 534.6611 252.5898 c
534.6611 250.6094 536.3838 248.8877 538.4502 248.8877 c
540.4307 248.8877 542.1533 250.6094 542.1533 252.5898 c
542.1533 254.6572 540.4307 256.293 538.4502 256.293 c
538.4502 256.293 l
f
570.2256 240.8789 m
559.9785 240.8789 553.5205 234.6797 553.5205 224.2598 c
553.5205 212.6348 l
553.5205 202.2148 560.0654 196.1006 570.2256 196.1006 c
580.6455 196.1006 586.9326 202.3867 586.9326 212.6348 c
586.9326 224.2598 l
586.9326 234.5928 580.5596 240.8789 570.2256 240.8789 c
570.2256 240.8789 l
f
0 D
570.2256 235.4541 m
576.6846 235.4541 581.0762 231.5791 581.0762 224.6895 c
581.0762 212.2031 l
581.0762 205.4004 576.6846 201.5254 570.2256 201.5254 c
563.8545 201.5254 559.376 205.4004 559.376 212.2031 c
559.376 224.6895 l
559.376 231.5791 563.8545 235.4541 570.2256 235.4541 c
570.2256 235.4541 l
f
*U
U
u
*u
1 D
0.75021 0.679683 0.670222 0.90164 0 0 0 Xa
323.3228 376.2827 m
332.7583 366.8472 l
335.0396 388 l
323.3228 376.2827 l
323.3228 376.2827 l
f
0 D
323.1743 412.1938 m
327.0513 408.3179 l
307.231 388.498 l
306.1646 387.4321 304.4204 387.4321 303.356 388.498 c
302.2896 389.564 302.2896 391.3086 303.356 392.374 c
323.1743 412.1938 l
323.1743 412.1938 l
f
286.2271 375.2456 m
290.1021 371.3691 l
265.3052 346.5723 l
264.2388 345.5063 262.4946 345.5063 261.4302 346.5723 c
260.3638 347.6382 260.3638 349.3828 261.4302 350.4487 c
286.2271 375.2456 l
286.2271 375.2456 l
f
265.2251 376.0547 m
275.3208 386.1509 l
279.1978 382.2749 l
274.106 377.1831 269.0142 372.0918 263.9224 367.0005 c
257.9478 376.4194 254.9575 387.1885 254.9575 397.957 c
254.9575 412.7637 260.606 427.5708 271.9028 438.8677 c
283.1997 450.1646 298.0083 455.8135 312.813 455.813 c
325.3892 455.8135 337.9653 451.7378 348.3911 443.5889 c
362.2603 447.4023 l
358.4458 433.5308 l
366.5942 423.1064 370.6704 410.5322 370.6704 397.957 c
370.6704 383.1509 365.022 368.3438 353.7251 357.0464 c
342.4282 345.7495 327.6216 340.1011 312.813 340.1011 c
302.0454 340.1011 291.2759 343.0903 281.8579 349.0659 c
286.9478 354.1572 292.0396 359.249 297.1313 364.3403 c
301.0083 360.4639 l
290.9126 350.3677 l
297.8442 347.1787 305.3286 345.5825 312.813 345.5825 c
326.2173 345.5825 339.6216 350.6963 349.8481 360.9229 c
360.0747 371.1494 365.188 384.5537 365.188 397.957 c
365.188 407.9976 362.3169 418.0376 356.5786 426.7427 c
350.0552 403.0151 l
341.2036 394.1646 l
336.9673 354.8848 l
319.4458 372.4067 l
308.1802 361.1396 l
297.4517 371.8672 286.7251 382.5947 275.9966 393.3223 c
287.2642 404.5894 l
269.7427 422.1108 l
309.022 426.3477 l
317.8716 435.1978 l
341.6021 441.7222 l
332.897 447.4619 322.854 450.3315 312.813 450.3315 c
299.4106 450.3315 286.0063 445.2183 275.7798 434.9912 c
265.5532 424.7646 260.4399 411.3608 260.4399 397.957 c
260.4399 390.4717 262.0337 382.9868 265.2251 376.0547 c
265.2251 376.0547 l
f
1 D
354.4419 439.584 m
320.7466 430.3188 l
308.4146 417.9868 296.0806 405.6548 283.7485 393.3223 c
308.1802 368.8921 l
320.5122 381.2246 332.8442 393.5566 345.1763 405.8892 c
354.4419 439.584 l
354.4419 439.584 l
f
281.7036 417.9014 m
291.1392 408.4658 l
302.8579 420.1826 l
281.7036 417.9014 l
281.7036 417.9014 l
f
*U
0 D
1 XR
321.1216 434.4429 m
349.4614 406.1021 l
345.5864 402.2256 l
317.2446 430.5664 l
321.1216 434.4429 l
321.1216 434.4429 l
f
*u
1 D
0 XR
399.5513 429.001 m
392.6626 429.001 387.9263 424.6953 387.9263 417.4614 c
387.9263 369.8413 l
387.9263 368.1191 389.2173 366.9136 390.854 366.9136 c
392.4888 366.9136 393.7817 368.0327 393.7817 369.8413 c
393.7817 405.2334 l
403.856 405.2334 l
405.6646 405.2334 406.7837 406.439 406.7837 407.9893 c
406.7837 409.6255 405.6646 410.8311 403.856 410.8311 c
393.7817 410.8311 l
393.7817 418.0645 l
393.7817 421.251 396.106 423.834 399.8091 423.834 c
402.1333 423.834 402.9946 423.4033 404.1157 423.4033 c
405.5786 423.4033 406.7837 424.437 406.7837 425.9009 c
406.7837 427.3647 405.7505 428.2256 404.3735 428.5703 c
402.479 428.9146 401.2739 429.001 399.5513 429.001 c
399.5513 429.001 l
f
417.3755 429.001 m
415.7407 429.001 414.4478 427.7954 414.4478 426.0732 c
414.4478 369.8413 l
414.4478 368.1191 415.7407 366.9136 417.3755 366.9136 c
419.0981 366.9136 420.3032 368.1191 420.3032 369.8413 c
420.3032 426.0732 l
420.3032 427.7954 419.0981 429.001 417.3755 429.001 c
417.3755 429.001 l
f
448.0313 411.6919 m
442.9512 411.6919 438.4727 410.1421 435.459 408.4199 c
434.5977 407.9033 434.082 407.042 434.082 406.0088 c
434.082 404.4585 435.459 403.3394 436.752 403.3394 c
437.7852 403.3394 438.6445 403.77 439.6777 404.2866 c
442.4336 405.6641 445.1895 406.2671 448.2891 406.2671 c
454.0605 406.2671 457.418 403.2529 457.418 398.8613 c
457.418 393.1777 l
448.2891 393.1777 l
439.248 393.1777 431.4121 389.561 431.4121 380.0889 c
431.4121 370.6162 438.2148 366.9136 448.377 366.9136 c
452.7676 366.9136 457.332 367.6885 460.7754 368.894 c
462.498 369.4971 463.2734 370.8745 463.2734 372.4243 c
463.2734 398.8613 l
463.2734 407.4727 456.4707 411.6919 448.0313 411.6919 c
448.0313 411.6919 l
f
0 D
457.418 387.7529 m
457.418 373.7163 l
454.4043 372.855 451.3906 372.3389 448.377 372.3389 c
441.832 372.3389 437.2676 373.8887 437.2676 380.0024 c
437.2676 385.686 441.832 387.7529 448.1172 387.7529 c
457.418 387.7529 l
457.418 387.7529 l
f
1 D
479.5488 429.001 m
477.8262 429.001 476.6211 427.7954 476.6211 426.0732 c
476.6211 369.8413 l
476.6211 368.1191 477.9121 366.9136 479.5488 366.9136 c
481.1855 366.9136 482.4766 368.1191 482.4766 369.8413 c
482.4766 388.6138 l
501.4219 367.9468 l
502.1113 367.1719 502.7129 366.9136 503.6602 366.9136 c
505.4688 366.9136 506.502 368.2915 506.502 369.7554 c
506.502 370.5303 506.2441 371.1333 505.6406 371.7358 c
486.8691 391.8862 l
504.6074 406.6113 l
505.4688 407.3003 505.7266 408.0752 505.7266 408.8501 c
505.7266 410.5728 504.5215 411.6919 502.9727 411.6919 c
502.1973 411.6919 501.5078 411.4336 500.7324 410.8311 c
482.4766 395.3306 l
482.4766 426.0732 l
482.4766 427.7954 481.2715 429.001 479.5488 429.001 c
479.5488 429.001 l
f
518.4727 375.3525 m
516.2324 375.3525 514.252 373.458 514.252 371.1333 c
514.252 368.8076 516.2324 366.9136 518.4727 366.9136 c
520.7969 366.9136 522.6914 368.894 522.6914 371.1333 c
522.6914 373.458 520.7969 375.3525 518.4727 375.3525 c
518.4727 375.3525 l
f
538.4492 411.6919 m
536.7285 411.6919 535.5215 410.4863 535.5215 408.7646 c
535.5215 369.8413 l
535.5215 368.1191 536.7285 366.9136 538.4492 366.9136 c
540.0859 366.9136 541.377 368.1191 541.377 369.8413 c
541.377 408.7646 l
541.377 410.4863 540.0859 411.6919 538.4492 411.6919 c
538.4492 411.6919 l
f
538.4492 427.1064 m
536.3828 427.1064 534.6602 425.4702 534.6602 423.4033 c
534.6602 421.4229 536.3828 419.7007 538.4492 419.7007 c
540.4316 419.7007 542.1523 421.4229 542.1523 423.4033 c
542.1523 425.4702 540.4316 427.1064 538.4492 427.1064 c
538.4492 427.1064 l
f
570.2266 411.6919 m
559.9785 411.6919 553.5195 405.4922 553.5195 395.0723 c
553.5195 383.4473 l
553.5195 373.0273 560.0645 366.9136 570.2266 366.9136 c
580.6445 366.9136 586.9316 373.1997 586.9316 383.4473 c
586.9316 395.0723 l
586.9316 405.4058 580.5586 411.6919 570.2266 411.6919 c
570.2266 411.6919 l
f
0 D
570.2266 406.2671 m
576.6836 406.2671 581.0762 402.3921 581.0762 395.5029 c
581.0762 383.0166 l
581.0762 376.2134 576.6836 372.3389 570.2266 372.3389 c
563.8535 372.3389 559.375 376.2134 559.375 383.0166 c
559.375 395.5029 l
559.375 402.3921 563.8535 406.2671 570.2266 406.2671 c
570.2266 406.2671 l
f
*U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
